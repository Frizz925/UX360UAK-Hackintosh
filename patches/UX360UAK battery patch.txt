# Battery patch for Asus Zenbook UX360UAK
# Made by Frizz925 (https://github.com/Frizz925)
# Based on RehabMan's battery patching guide (https://www.tonymacx86.com/threads/guide-how-to-patch-dsdt-for-working-battery-status.116102/)

into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized) { Return(Or(Arg0, ShiftLeft(Arg1, 8))) }\n
end;

into device label EC0 code_regex TAH0,\s+16 replace_matched begin TAX0,8,TAX1,8 end;
into device label EC0 code_regex TAH1,\s+16 replace_matched begin TAX2,8,TAX3,8 end;

into device label EC0 code_regex B0PN,\s+16 replace_matched begin B0X0,8,B0X1,8 end;
into device label EC0 code_regex B1PN,\s+16 replace_matched begin B0X2,8,B0X3,8 end;

into device label EC0 code_regex B0TM,\s+16 replace_matched begin BTX0,8,BTX1,8 end;

into device label EC0 code_regex B0C1,\s+16 replace_matched begin BCX0,8,BCX1,8 end;
into device label EC0 code_regex B0C2,\s+16 replace_matched begin BCX2,8,BCX3,8 end;
into device label EC0 code_regex B0C3,\s+16 replace_matched begin BCX4,8,BCX5,8 end;
into device label EC0 code_regex B0C4,\s+16 replace_matched begin BCX6,8,BCX7,8 end;

into device label EC0 code_regex B1TM,\s+16 replace_matched begin BTY0,8,BTY1,8 end;

into device label EC0 code_regex B1C1,\s+16 replace_matched begin BCY0,8,BCY1,8 end;
into device label EC0 code_regex B1C2,\s+16 replace_matched begin BCY2,8,BCY3,8 end;
into device label EC0 code_regex B1C3,\s+16 replace_matched begin BCY4,8,BCY5,8 end;
into device label EC0 code_regex B1C4,\s+16 replace_matched begin BCY6,8,BCY7,8 end;

into device label EC0 code_regex B0SN,\s+16 replace_matched begin BSX0,8,BSX1,8 end;
into device label EC0 code_regex B1SN,\s+16 replace_matched begin BSX2,8,BSX3,8 end;

into method label _BIX code_regex \(B0C3, replaceall_matched begin (B1B2(BCX4,BCX5), end;

into method label BIFA code_regex \(B0SN, replaceall_matched begin (B1B2(BSX0,BSX1), end;
into method label BIFA code_regex \(B1SN, replaceall_matched begin (B1B2(BSX2,BSX3), end;

into device label EC0 code_regex (BDAT,)\s+(256) replace_matched begin BDZ0,%2,//%1%2 end;
into device label EC0 code_regex (BDA2,)\s+(256) replace_matched begin BDZ1,%2,//%1%2 end;

into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
{\n
    ShiftRight(Add(Arg1,7), 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

into method label WE1B parent_label EC0 remove_entry;
into method label WECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (WE1B, 2, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Store(Arg1, BYTE)\n
}\n
Method (WECB, 3, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
// Arg2 - value to write\n
{\n
    ShiftRight(Add(Arg1,7), 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Store(Arg2, TEMP)\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
}\n
end;

into method label SMBR code_regex \(BDAT, replaceall_matched begin (RECB(0x28,256), end;
into method label SMBR code_regex Store\s*\(([^\,]+),\s*BDAT\) replaceall_matched begin  WECB(0x28, 256, %1) end;

into method label SMBW code_regex \(BDAT, replaceall_matched begin (RECB(0x28,256), end;
into method label SMBW code_regex Store\s*\(([^\,]+),\s*BDAT\) replaceall_matched begin  WECB(0x28, 256, %1) end;